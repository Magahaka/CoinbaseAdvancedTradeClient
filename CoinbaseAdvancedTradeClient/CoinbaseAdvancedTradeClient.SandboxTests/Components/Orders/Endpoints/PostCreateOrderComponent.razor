@inherits ApiClientSandboxComponentBase

<div class="row">
    <div class="col-6">
        <h3>Request</h3>
        <div class="form-group row p-2">
            <label class="col-4 col-form-label">Client Order ID</label>
            <div class="col-6">
                <InputText class="form-control" @bind-Value="@ClientOrderId"></InputText>
            </div>
            <div class="col-2">
                <button class="btn btn-primary" @onclick="@GenerateClientOrderId">Generate</button>
            </div>
        </div>
        <div class="form-group row p-2">
            <label class="col-4 col-form-label">Product ID</label>
            <div class="col-8">
                <InputText class="form-control" @bind-Value="@ProductId"></InputText>
            </div>
        </div>
        <div class="form-group row p-2">
            <label class="col-4 col-form-label">Side</label>
            <div class="col-8">
                <InputSelect class="form-control" @bind-Value="@OrderSide">
                    <option value="@OrderSide.Buy">Buy</option>
                    <option value="@OrderSide.Sell">Sell</option>
                </InputSelect>
            </div>
        </div>
        <div class="form-group row p-2">
            <label class="col-4 col-form-label">Configuration</label>
            <div class="col-8">
                <InputSelect class="form-control" @bind-Value="@OrderConfiguration">
                    <option value="@nameof(MarketIoc)">Market IOC</option>
                    <option value="@nameof(LimitGtc)">Limit GTC</option>
                    <option value="@nameof(LimitGtd)">Limit GTD</option>
                    <option value="@nameof(StopLimitGtc)">Stop Limit GTC</option>
                    <option value="@nameof(StopLimitGtd)">Stop Limit GTD</option>
                </InputSelect>
            </div>
        </div>

        @if (OrderConfiguration.Equals(nameof(MarketIoc)))
        {
            <div class="form-group row p-2">
                <label class="col-4 col-form-label">Quote Size (BUY)</label>
                <div class="col-8">
                    <InputText class="form-control" @bind-Value="@MarketIoc.QuoteSize"></InputText>
                </div>
            </div>
            <div class="form-group row p-2">
                <label class="col-4 col-form-label">Base Size (SELL)</label>
                <div class="col-8">
                    <InputText class="form-control" @bind-Value="@MarketIoc.BaseSize"></InputText>
                </div>
            </div>
        }

        @if (OrderConfiguration.Equals(nameof(LimitGtc)))
        {
            <div class="form-group row p-2">
                <label class="col-4 col-form-label">Base Size</label>
                <div class="col-8">
                    <InputText class="form-control" @bind-Value="@LimitGtc.BaseSize"></InputText>
                </div>
            </div>
            <div class="form-group row p-2">
                <label class="col-4 col-form-label">Limit Price</label>
                <div class="col-8">
                    <InputText class="form-control" @bind-Value="@LimitGtc.LimitPrice"></InputText>
                </div>
            </div>
            <div class="form-group row p-2">
                <label class="col-4 col-form-label">Post Only</label>
                <div class="col-8">
                    <InputCheckbox @bind-Value="@LimitGtc.PostOnly"></InputCheckbox>
                </div>
            </div>
        }

        @if (OrderConfiguration.Equals(nameof(LimitGtd)))
        {
            <div class="form-group row p-2">
                <label class="col-4 col-form-label">Base Size</label>
                <div class="col-8">
                    <InputText class="form-control" @bind-Value="@LimitGtd.BaseSize"></InputText>
                </div>
            </div>
            <div class="form-group row p-2">
                <label class="col-4 col-form-label">Limit Price</label>
                <div class="col-8">
                    <InputText class="form-control" @bind-Value="@LimitGtd.LimitPrice"></InputText>
                </div>
            </div>
            <div class="form-group row p-2">
                <label class="col-4 col-form-label">Post Only</label>
                <div class="col-8">
                    <InputCheckbox @bind-Value="@LimitGtd.PostOnly"></InputCheckbox>
                </div>
            </div>
            <div class="form-group row p-2">
                <label class="col-4 col-form-label">End Date</label>
                <div class="col-8">
                    <InputDate class="form-control" @bind-Value="@LimitGtd.EndTime"></InputDate>
                </div>
            </div>
        }

        @if (OrderConfiguration.Equals(nameof(StopLimitGtc)))
        {
            <div class="form-group row p-2">
                <label class="col-4 col-form-label">Base Size</label>
                <div class="col-8">
                    <InputText class="form-control" @bind-Value="@StopLimitGtc.BaseSize"></InputText>
                </div>
            </div>
            <div class="form-group row p-2">
                <label class="col-4 col-form-label">Limit Price</label>
                <div class="col-8">
                    <InputText class="form-control" @bind-Value="@StopLimitGtc.LimitPrice"></InputText>
                </div>
            </div>
            <div class="form-group row p-2">
                <label class="col-4 col-form-label">Stop Price</label>
                <div class="col-8">
                    <InputText class="form-control" @bind-Value="@StopLimitGtc.StopPrice"></InputText>
                </div>
            </div>
            <div class="form-group row p-2">
                <label class="col-4 col-form-label">Stop Direction</label>
                <div class="col-8">
                    <InputSelect class="form-control" @bind-Value="@StopLimitGtc.StopDirection">
                        <option value="@StopDirection.Up">Up</option>
                        <option value="@StopDirection.Down">Down</option>
                    </InputSelect>
                </div>
            </div>
        }

        @if (OrderConfiguration.Equals(nameof(StopLimitGtd)))
        {
            <div class="form-group row p-2">
                <label class="col-4 col-form-label">Base Size</label>
                <div class="col-8">
                    <InputText class="form-control" @bind-Value="@StopLimitGtd.BaseSize"></InputText>
                </div>
            </div>
            <div class="form-group row p-2">
                <label class="col-4 col-form-label">Limit Price</label>
                <div class="col-8">
                    <InputText class="form-control" @bind-Value="@StopLimitGtd.LimitPrice"></InputText>
                </div>
            </div>
            <div class="form-group row p-2">
                <label class="col-4 col-form-label">Stop Price</label>
                <div class="col-8">
                    <InputText class="form-control" @bind-Value="@StopLimitGtd.StopPrice"></InputText>
                </div>
            </div>
            <div class="form-group row p-2">
                <label class="col-4 col-form-label">Stop Direction</label>
                <div class="col-8">
                    <InputSelect class="form-control" @bind-Value="@StopLimitGtc.StopDirection">
                        <option value="@StopDirection.Up">Up</option>
                        <option value="@StopDirection.Down">Down</option>
                    </InputSelect>
                </div>
            </div>
            <div class="form-group row p-2">
                <label class="col-4 col-form-label">End Date</label>
                <div class="col-8">
                    <InputDate class="form-control" @bind-Value="@StopLimitGtd.EndTime"></InputDate>
                </div>
            </div>
        }

        <div class="form-group row p-2">
            <div class="col-8 offset-4">
                <button class="btn btn-primary" @onclick="@PostCreateOrderAsync">POST</button>
            </div>
        </div>
    </div>
    <div class="col-6">
        <PostCreateOrderResponseComponent Result="Result" />
    </div>
</div>

@code {
    public string ClientOrderId { get; set; }

    public string ProductId { get; set; } = null;

    public OrderSide OrderSide { get; set; } = OrderSide.Buy;

    public string OrderConfiguration { get; set; } = nameof(MarketIoc);

    public ApiResponse<CreateOrderResponse> Result { get; set; } = null;

    public MarketIoc MarketIoc { get; set; } = new MarketIoc();

    public LimitGtc LimitGtc { get; set; } = new LimitGtc();

    public LimitGtd LimitGtd { get; set; } = new LimitGtd();

    public StopLimitGtc StopLimitGtc { get; set; } = new StopLimitGtc();

    public StopLimitGtd StopLimitGtd { get; set; } = new StopLimitGtd();

    public async Task PostCreateOrderAsync()
    {
        var createOrder = new CreateOrderParameters
            {
                ClientOrderId = ClientOrderId,
                ProductId = ProductId,
                Side = OrderSide,
                OrderConfiguration = GetOrderConfiguration(OrderConfiguration)
            };

        Result = await Client.Orders.PostCreateOrderAsync(createOrder);
    }

    private OrderConfiguration GetOrderConfiguration(string orderConfiguration)
    {
        switch (orderConfiguration)
        {
            case nameof(LimitGtc):
                return new OrderConfiguration { LimitGtc = LimitGtc };
            case nameof(LimitGtd):
                return new OrderConfiguration { LimitGtd = LimitGtd };
            case nameof(StopLimitGtc):
                return new OrderConfiguration { StopLimitGtc = StopLimitGtc };
            case nameof(StopLimitGtd):
                return new OrderConfiguration { StopLimitGtd = StopLimitGtd };
            case nameof(MarketIoc):
            default:
                return new OrderConfiguration { MarketIoc = MarketIoc };
        }
    }

    public void GenerateClientOrderId()
    {
        ClientOrderId = Guid.NewGuid().ToString();
    }
}
